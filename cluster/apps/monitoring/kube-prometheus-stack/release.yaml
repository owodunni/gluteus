---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
  namespace: monitoring
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://prometheus-community.github.io/helm-charts
      chart: kube-prometheus-stack
      version: 23.3.2
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
      interval: 1m
  install:
    crds: Create
  upgrade:
    crds: CreateReplace
  values:
    alertmanager:
      replicas: 1
      enabled: true
      config:
        global:
          slack_api_url: "${SECRET_SLACK_WEBHOOK}"
          resolve_timeout: 5m
      route:
        group_by: ['job']
        group_wait: 30s
        group_interval: 5m
        repeat_interval: 12h
        routes:
          - match:
              alertname: Watchdog
          - receiver: 'slack-notifications'
            continue: true
      receivers:
        - name: 'slack-notifications'
          slack_configs:
            - channel: '#gluteus'
              icon_url: https://avatars3.githubusercontent.com/u/3380462
              username: 'Prometheus'
              title: '[{{ .Status | toUpper }}{{ if eq .Status "firing" }}:{{ .Alerts.Firing | len }}{{ end }}] Test Alertmanager'
              text: >-
                {{ range .Alerts }}
                  *Alert:* {{ .Annotations.summary }} - `{{ .Labels.severity }}`
                {{ end }}
              send_resolved: true
      ingress:
        enabled: true
        pathType: Prefix
        ingressClassName: "traefik"
        annotations:
          hajimari.io/appName: "alert-manager"
          hajimari.io/enable: "true"
          hajimari.io/icon: "web"
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          cert-manager.io/cluster-issuer: "letsencrypt-production"
        hosts:
          - "alert-manager.${SECRET_DOMAIN}"
        tls:
          - hosts:
              - "alert-manager.${SECRET_DOMAIN}"
            secretName: alert-manager-tls
    grafana:
      adminPassword: "${SECRET_GRAFANA_PASSWORD}"
      sidecar:
        dashboards:
          searchNamespace: ALL
      ingress:
        enabled: true
        ingressClassName: "traefik"
        annotations:
          hajimari.io/appName: "grafana"
          hajimari.io/enable: "true"
          hajimari.io/icon: "web"
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          cert-manager.io/cluster-issuer: "letsencrypt-production"
        hosts:
          - "grafana.${SECRET_DOMAIN}"
        tls:
          - hosts:
              - "grafana.${SECRET_DOMAIN}"
            secretName: "grafana-tls"
    prometheus:
      prometheusSpec:
        podMonitorSelector:
          matchLabels:
            app.kubernetes.io/part-of: flux
        replicas: 1
        additionalScrapeConfigs:
          - job_name: 'geth'
            honor_timestamps: true
            metrics_path: /debug/metrics/prometheus
            static_configs:
              - targets:
                  - "${METALLB_GETH_ADDR}:6060"
